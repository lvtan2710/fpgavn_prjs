// megafunction wizard: %RAM: 2-PORT%
// GENERATION: STANDARD
// VERSION: WM1.0
// MODULE: altsyncram 

// ============================================================
// File Name: alt_tdp_bram.v
// Megafunction Name(s):
//          altsyncram
//
// Simulation Library Files(s):
//          altera_mf
// ============================================================
// ************************************************************
// THIS IS A WIZARD-GENERATED FILE. DO NOT EDIT THIS FILE!
//
// 15.0.0 Build 145 04/22/2015 SJ Web Edition
// ************************************************************


//Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
//Your use of Altera Corporation's design tools, logic functions 
//and other software and tools, and its AMPP partner logic 
//functions, and any output files from any of the foregoing 
//(including device programming or simulation files), and any 
//associated documentation or information are expressly subject 
//to the terms and conditions of the Altera Program License 
//Subscription Agreement, the Altera Quartus II License Agreement,
//the Altera MegaCore Function License Agreement, or other 
//applicable license agreement, including, without limitation, 
//that your use is for the sole purpose of programming logic 
//devices manufactured by Altera and sold by Altera or its 
//authorized distributors.  Please refer to the applicable 
//agreement for further details.


// synopsys translate_off
`timescale 1 ps / 1 ps
// synopsys translate_on
module alt_tdp_bram (
    address_a,
    address_b,
    data_a,
    data_b,
    inclock,
    outclock,
    wren_a,
    wren_b,
    q_a,
    q_b);

parameter G_ADDR_A      = 10;
parameter G_WIDTH_A     = 16;
parameter G_DEPTH_A     = 2**G_ADDR_A;
parameter G_ADDR_B      = G_ADDR_A;
parameter G_WIDTH_B     = G_WIDTH_A;
parameter G_DEPTH_B     = G_DEPTH_A;
parameter G_DEVICE      = "Cyclone V";      // Cyclone V
parameter G_COMMONCLK   = 0;

parameter A_REG_EN_A    = "CLOCK0"; // CLOCK0, UNREGISTERED
parameter A_REG_EN_B    = "CLOCK1"; // CLOCK1, UNREGISTERED
parameter A_WR_MODE     = "NEW_DATA_NO_NBE_READ";   // NEW_DATA_NO_NBE_READ (X on masked byte)
                                                  // NEW_DATA_WITH_NBE_READ (old data on masked byte)
parameter A_MAXDEPTH    = 1024;
parameter A_BRAM_TYPE   = "AUTO";           // AUTO, M512, M4K, M-RAM, MLAB, M9K, M144K, M10K, M20K, LC
// M512 blocks are not supported in true dual-port RAM mode
// MLAB blocks are not supported in simple dual-port RAM mode with mixed-width port feature, true dual-port RAM mode, and dual-port ROM mode
parameter A_INIT_FILE   = "UNUSED";

input [G_ADDR_A-1:0]    address_a;
input [G_ADDR_B-1:0]    address_b;
input [G_WIDTH_A-1:0]   data_a;
input [G_WIDTH_B-1:0]   data_b;
input                   inclock;
input                   outclock;
input                   wren_a;
input                   wren_b;
output [G_WIDTH_A-1:0]  q_a;
output [G_WIDTH_B-1:0]  q_b;

`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
tri1                    inclock;
tri0                    wren_a;
tri0                    wren_b;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

wire [G_WIDTH_A-1:0]    sub_wire0;
wire [G_WIDTH_B-1:0]    sub_wire1;
wire [G_WIDTH_A-1:0]    q_a = sub_wire0[G_WIDTH_A-1:0];
wire [G_WIDTH_B-1:0]    q_b = sub_wire1[G_WIDTH_B-1:0];

wire                    clock0, clock1;
assign                  clock0 = inclock;
//assign                  clock1 = (G_COMMONCLK == 1) ? 1'b1 : outclock;
assign                  clock1 = outclock;

    altsyncram  altsyncram_component (
                .address_a      (address_a),
                .address_b      (address_b),
                .clock0         (clock0),
                .clock1         (clock1),
                .data_a         (data_a),
                .data_b         (data_b),
                .wren_a         (wren_a),
                .wren_b         (wren_b),
                .q_a            (sub_wire0),
                .q_b            (sub_wire1),
                .aclr0          (1'b0),
                .aclr1          (1'b0),
                .addressstall_a (1'b0),
                .addressstall_b (1'b0),
                .byteena_a      (1'b1),
                .byteena_b      (1'b1),
                .clocken0       (1'b1),
                .clocken1       (1'b1),
                .clocken2       (1'b1),
                .clocken3       (1'b1),
                .eccstatus      (),
                .rden_a         (1'b1),
                .rden_b         (1'b1));
    defparam
        altsyncram_component.address_reg_b                      = (G_COMMONCLK == 1) ? "CLOCK0" : "CLOCK1",
        altsyncram_component.clock_enable_input_a               = "BYPASS",
        altsyncram_component.clock_enable_input_b               = "BYPASS",
        altsyncram_component.clock_enable_output_a              = "BYPASS",
        altsyncram_component.clock_enable_output_b              = "BYPASS",
        altsyncram_component.indata_reg_b                       = (G_COMMONCLK == 1) ? "CLOCK0" : "CLOCK1",
        altsyncram_component.intended_device_family             = G_DEVICE,
        altsyncram_component.lpm_type                           = "altsyncram",
        altsyncram_component.maximum_depth                      = A_MAXDEPTH,
        altsyncram_component.numwords_a                         = G_DEPTH_A,
        altsyncram_component.numwords_b                         = G_DEPTH_B,
        altsyncram_component.init_file                          = A_INIT_FILE,
        altsyncram_component.operation_mode                     = "BIDIR_DUAL_PORT",
        altsyncram_component.outdata_aclr_a                     = "NONE",
        altsyncram_component.outdata_aclr_b                     = "NONE",
        altsyncram_component.outdata_reg_a                      = A_REG_EN_A,
        altsyncram_component.outdata_reg_b                      = A_REG_EN_B,
        altsyncram_component.power_up_uninitialized             = "FALSE",
        altsyncram_component.ram_block_type                     = A_BRAM_TYPE,
        altsyncram_component.read_during_write_mode_mixed_ports = "OLD_DATA",
        altsyncram_component.read_during_write_mode_port_a      = A_WR_MODE,
        altsyncram_component.read_during_write_mode_port_b      = A_WR_MODE,
        altsyncram_component.widthad_a                          = G_ADDR_A,
        altsyncram_component.widthad_b                          = G_ADDR_B,
        altsyncram_component.width_a                            = G_WIDTH_A,
        altsyncram_component.width_b                            = G_WIDTH_B,
        altsyncram_component.width_byteena_a                    = 1,
        altsyncram_component.width_byteena_b                    = 1,
        altsyncram_component.wrcontrol_wraddress_reg_b          = (G_COMMONCLK == 1) ? "CLOCK0" : "CLOCK1";


endmodule

// ============================================================
// CNX file retrieval info
// ============================================================
// Retrieval info: PRIVATE: ADDRESSSTALL_A NUMERIC "0"
// Retrieval info: PRIVATE: ADDRESSSTALL_B NUMERIC "0"
// Retrieval info: PRIVATE: BYTEENA_ACLR_A NUMERIC "0"
// Retrieval info: PRIVATE: BYTEENA_ACLR_B NUMERIC "0"
// Retrieval info: PRIVATE: BYTE_ENABLE_A NUMERIC "0"
// Retrieval info: PRIVATE: BYTE_ENABLE_B NUMERIC "0"
// Retrieval info: PRIVATE: BYTE_SIZE NUMERIC "8"
// Retrieval info: PRIVATE: BlankMemory NUMERIC "1"
// Retrieval info: PRIVATE: CLOCK_ENABLE_INPUT_A NUMERIC "0"
// Retrieval info: PRIVATE: CLOCK_ENABLE_INPUT_B NUMERIC "0"
// Retrieval info: PRIVATE: CLOCK_ENABLE_OUTPUT_A NUMERIC "0"
// Retrieval info: PRIVATE: CLOCK_ENABLE_OUTPUT_B NUMERIC "0"
// Retrieval info: PRIVATE: CLRdata NUMERIC "0"
// Retrieval info: PRIVATE: CLRq NUMERIC "0"
// Retrieval info: PRIVATE: CLRrdaddress NUMERIC "0"
// Retrieval info: PRIVATE: CLRrren NUMERIC "0"
// Retrieval info: PRIVATE: CLRwraddress NUMERIC "0"
// Retrieval info: PRIVATE: CLRwren NUMERIC "0"
// Retrieval info: PRIVATE: Clock NUMERIC "2"
// Retrieval info: PRIVATE: Clock_A NUMERIC "0"
// Retrieval info: PRIVATE: Clock_B NUMERIC "0"
// Retrieval info: PRIVATE: IMPLEMENT_IN_LES NUMERIC "0"
// Retrieval info: PRIVATE: INDATA_ACLR_B NUMERIC "0"
// Retrieval info: PRIVATE: INDATA_REG_B NUMERIC "1"
// Retrieval info: PRIVATE: INIT_FILE_LAYOUT STRING "PORT_A"
// Retrieval info: PRIVATE: INIT_TO_SIM_X NUMERIC "0"
// Retrieval info: PRIVATE: INTENDED_DEVICE_FAMILY STRING "Cyclone V"
// Retrieval info: PRIVATE: JTAG_ENABLED NUMERIC "0"
// Retrieval info: PRIVATE: JTAG_ID STRING "NONE"
// Retrieval info: PRIVATE: MAXIMUM_DEPTH NUMERIC "0"
// Retrieval info: PRIVATE: MEMSIZE NUMERIC "320"
// Retrieval info: PRIVATE: MEM_IN_BITS NUMERIC "0"
// Retrieval info: PRIVATE: MIFfilename STRING ""
// Retrieval info: PRIVATE: OPERATION_MODE NUMERIC "3"
// Retrieval info: PRIVATE: OUTDATA_ACLR_B NUMERIC "0"
// Retrieval info: PRIVATE: OUTDATA_REG_B NUMERIC "1"
// Retrieval info: PRIVATE: RAM_BLOCK_TYPE NUMERIC "0"
// Retrieval info: PRIVATE: READ_DURING_WRITE_MODE_MIXED_PORTS NUMERIC "1"
// Retrieval info: PRIVATE: READ_DURING_WRITE_MODE_PORT_A NUMERIC "3"
// Retrieval info: PRIVATE: READ_DURING_WRITE_MODE_PORT_B NUMERIC "3"
// Retrieval info: PRIVATE: REGdata NUMERIC "1"
// Retrieval info: PRIVATE: REGq NUMERIC "1"
// Retrieval info: PRIVATE: REGrdaddress NUMERIC "0"
// Retrieval info: PRIVATE: REGrren NUMERIC "0"
// Retrieval info: PRIVATE: REGwraddress NUMERIC "1"
// Retrieval info: PRIVATE: REGwren NUMERIC "1"
// Retrieval info: PRIVATE: SYNTH_WRAPPER_GEN_POSTFIX STRING "1"
// Retrieval info: PRIVATE: USE_DIFF_CLKEN NUMERIC "0"
// Retrieval info: PRIVATE: UseDPRAM NUMERIC "1"
// Retrieval info: PRIVATE: VarWidth NUMERIC "1"
// Retrieval info: PRIVATE: WIDTH_READ_A NUMERIC "10"
// Retrieval info: PRIVATE: WIDTH_READ_B NUMERIC "40"
// Retrieval info: PRIVATE: WIDTH_WRITE_A NUMERIC "10"
// Retrieval info: PRIVATE: WIDTH_WRITE_B NUMERIC "40"
// Retrieval info: PRIVATE: WRADDR_ACLR_B NUMERIC "0"
// Retrieval info: PRIVATE: WRADDR_REG_B NUMERIC "1"
// Retrieval info: PRIVATE: WRCTRL_ACLR_B NUMERIC "0"
// Retrieval info: PRIVATE: enable NUMERIC "0"
// Retrieval info: PRIVATE: rden NUMERIC "0"
// Retrieval info: LIBRARY: altera_mf altera_mf.altera_mf_components.all
// Retrieval info: CONSTANT: ADDRESS_REG_B STRING "CLOCK0"
// Retrieval info: CONSTANT: CLOCK_ENABLE_INPUT_A STRING "BYPASS"
// Retrieval info: CONSTANT: CLOCK_ENABLE_INPUT_B STRING "BYPASS"
// Retrieval info: CONSTANT: CLOCK_ENABLE_OUTPUT_A STRING "BYPASS"
// Retrieval info: CONSTANT: CLOCK_ENABLE_OUTPUT_B STRING "BYPASS"
// Retrieval info: CONSTANT: INDATA_REG_B STRING "CLOCK0"
// Retrieval info: CONSTANT: INTENDED_DEVICE_FAMILY STRING "Cyclone V"
// Retrieval info: CONSTANT: LPM_TYPE STRING "altsyncram"
// Retrieval info: CONSTANT: NUMWORDS_A NUMERIC "32"
// Retrieval info: CONSTANT: NUMWORDS_B NUMERIC "8"
// Retrieval info: CONSTANT: OPERATION_MODE STRING "BIDIR_DUAL_PORT"
// Retrieval info: CONSTANT: OUTDATA_ACLR_A STRING "NONE"
// Retrieval info: CONSTANT: OUTDATA_ACLR_B STRING "NONE"
// Retrieval info: CONSTANT: OUTDATA_REG_A STRING "CLOCK1"
// Retrieval info: CONSTANT: OUTDATA_REG_B STRING "CLOCK1"
// Retrieval info: CONSTANT: POWER_UP_UNINITIALIZED STRING "FALSE"
// Retrieval info: CONSTANT: READ_DURING_WRITE_MODE_MIXED_PORTS STRING "OLD_DATA"
// Retrieval info: CONSTANT: READ_DURING_WRITE_MODE_PORT_A STRING "NEW_DATA_NO_NBE_READ"
// Retrieval info: CONSTANT: READ_DURING_WRITE_MODE_PORT_B STRING "NEW_DATA_NO_NBE_READ"
// Retrieval info: CONSTANT: WIDTHAD_A NUMERIC "5"
// Retrieval info: CONSTANT: WIDTHAD_B NUMERIC "3"
// Retrieval info: CONSTANT: WIDTH_A NUMERIC "10"
// Retrieval info: CONSTANT: WIDTH_B NUMERIC "40"
// Retrieval info: CONSTANT: WIDTH_BYTEENA_A NUMERIC "1"
// Retrieval info: CONSTANT: WIDTH_BYTEENA_B NUMERIC "1"
// Retrieval info: CONSTANT: WRCONTROL_WRADDRESS_REG_B STRING "CLOCK0"
// Retrieval info: USED_PORT: address_a 0 0 5 0 INPUT NODEFVAL "address_a[4..0]"
// Retrieval info: USED_PORT: address_b 0 0 3 0 INPUT NODEFVAL "address_b[2..0]"
// Retrieval info: USED_PORT: data_a 0 0 10 0 INPUT NODEFVAL "data_a[9..0]"
// Retrieval info: USED_PORT: data_b 0 0 40 0 INPUT NODEFVAL "data_b[39..0]"
// Retrieval info: USED_PORT: inclock 0 0 0 0 INPUT VCC "inclock"
// Retrieval info: USED_PORT: outclock 0 0 0 0 INPUT NODEFVAL "outclock"
// Retrieval info: USED_PORT: q_a 0 0 10 0 OUTPUT NODEFVAL "q_a[9..0]"
// Retrieval info: USED_PORT: q_b 0 0 40 0 OUTPUT NODEFVAL "q_b[39..0]"
// Retrieval info: USED_PORT: wren_a 0 0 0 0 INPUT GND "wren_a"
// Retrieval info: USED_PORT: wren_b 0 0 0 0 INPUT GND "wren_b"
// Retrieval info: CONNECT: @address_a 0 0 5 0 address_a 0 0 5 0
// Retrieval info: CONNECT: @address_b 0 0 3 0 address_b 0 0 3 0
// Retrieval info: CONNECT: @clock0 0 0 0 0 inclock 0 0 0 0
// Retrieval info: CONNECT: @clock1 0 0 0 0 outclock 0 0 0 0
// Retrieval info: CONNECT: @data_a 0 0 10 0 data_a 0 0 10 0
// Retrieval info: CONNECT: @data_b 0 0 40 0 data_b 0 0 40 0
// Retrieval info: CONNECT: @wren_a 0 0 0 0 wren_a 0 0 0 0
// Retrieval info: CONNECT: @wren_b 0 0 0 0 wren_b 0 0 0 0
// Retrieval info: CONNECT: q_a 0 0 10 0 @q_a 0 0 10 0
// Retrieval info: CONNECT: q_b 0 0 40 0 @q_b 0 0 40 0
// Retrieval info: GEN_FILE: TYPE_NORMAL alt_tdp_bram.v TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL alt_tdp_bram.inc FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL alt_tdp_bram.cmp FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL alt_tdp_bram.bsf TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL alt_tdp_bram_inst.v TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL alt_tdp_bram_bb.v TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL alt_tdp_bram_syn.v TRUE
// Retrieval info: LIB_FILE: altera_mf
